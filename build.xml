<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Mar 23, 2010 11:32:47 PM                                                        

	Initial build file for the protege owlapi server project.
                   
     tredmond                                                                
     ====================================================================== -->
<project name="owl api server" default="jar">
	<property file="local.properties"/> <property environment="env"/>
    <property name = "protege.home" location="${env.PROTEGE_HOME}"/>
    <property file = "${protege.home}/build.properties"/>
	
	<property name = "protege.common"    location="${protege.home}/bundles"/>
	<property name = "protege.plugins"   location="${protege.home}/plugins"/>

    <property name="editor.lib"          location="${protege.plugins}/org.protege.editor.owl.jar"/>	
    <property name="owl.lib"             location="${protege.plugins}/org.semanticweb.owl.owlapi.jar"/>
    <property name="common.lib"          location="${protege.common}/org.protege.common.jar"/>

	<property name="src"        location="./src"/>
	<property name="build"      location="./build"/>
	<property name="genlib"     location="${build}/lib"/>
	<property name="classes"    location="${build}/classes"/>
	<property name="plugin"     value="org.protege.owl.server"/>

	<!-- ============================================================= -->
	<!--             Configuring the Compile Classpath                 -->
	<!-- ============================================================= -->


	<target name="checkProtegeLibsAndReport" depends="checkProtegeLibs"
	        unless="libs.found">
	       <echo message="Missing protege libraries.  You need to set "/>
	       <echo message="the PROTEGE_HOME environment variable to a"/>
	       <echo message="protege installation directory where the"/>
	       <echo message="appropriate plugins have been installed."/>
	      <echo message="Alternatively set the jar libs in local.properties (protege.lib=...)"/>
	      <echo message="Use the -v option to ant to see what jars are missing."/>
	      <fail message = "missing protege libraries"/>
	    </target>

	   <!-- 
	        The following target only needs to be modified if the user
	        needs to change the classpath.  It is preconfigured to use
	        the common protege 4 jars, the lib directory and the
	        libraries that have been uncovered in buildlibs. 
	     -->
	   <target name = "checkProtegeLibs" depends="init">
         <echo message="**********************************************************"/>
	     <echo message="Using Protege Home = ${protege.home}"/>
         <echo message="Using Java Version = ${ant.java.version}" />
         <echo message="**********************************************************"/>
	     <condition property="libs.found">
	       <and>
	         <available file="${protege.osgi}" type="file"/>
             <available file="${editor.lib}"   type="file"/>
	         <available file="${owl.lib}"      type="file"/>
	       </and>
	     </condition>
	     <path id = "project.classpath">    
	       <pathelement location="${protege.osgi}"/>
	       <pathelement location="${owl.lib}"/>
	       <fileset dir="${genlib}"/>
	     </path>
	   </target>

	   <target name = "buildlibs" depends="checkProtegeLibsAndReport">
	       <unjar dest="${build}"
	              src="${common.lib}">
	           <patternset>
	               <include name = "**/log4j.jar"/>
	           </patternset>
	       </unjar>
           <unjar dest="${build}"
                  src="${editor.lib}">
               <patternset>
                   <include name = "**/protege-owlapi-extensions.jar"/>
               </patternset>
           </unjar>
	   </target>
	
	<target name="init">
		<mkdir dir="${classes}"/>
		<copy todir="${build}">
			<fileset file="${common.lib}"/>
			<fileset file="${owl.lib}"/>
		</copy>
	</target>

    <target name="compile" depends="init, buildlibs">
    	<copy todir="${classes}" file="metaproject.owl"/>
        <javac srcdir="${src}" destdir="${classes}"
    		   debug="true">
        	<classpath refid="project.classpath"/>
    	</javac>
    </target>

	<target name = "jar" depends = "compile">
        <copy todir="${classes}/OSGI-INF">
            <fileset dir="OSGI-INF" includes="*.xml"/>
        </copy>
	    <jar jarfile = "${build}/${plugin}.jar"
	         basedir = "${classes}" 
	         manifest = "META-INF/MANIFEST.MF"/>
	</target>
	
    <target name = "install" depends="jar">
      <copy todir="${protege.home}">
        <fileset dir="./OSGi"/>
      </copy>
      <copy file="${build}/${plugin}.jar" 
            todir="${protege.plugins}"
            overwrite="true"/>
      <copy file="${genlib}/protege-owlapi-extensions.jar"
            todir="${protege.common}"
            overwrite="true"/>
    </target>

	<target name="clean">
		<delete dir="${build}"/>
	</target>

    <target name="usage">
      <echo message="Set the PROTEGE_HOME environment variable to point"/>
      <echo message="to a Protege distribution"/>
      <echo message=""/>
      <echo message="jar - makes the org.protege.server.jar bundle"/>
      <echo message="install - installs the server to a Protege distribution"/>
      <echo message="clean - cleans - enough said."/>
      <echo message="usage - prints this message"/>
    </target>
</project>
